[package]
name: iraf
version: 2.16.1

[about]
home: http://iraf.noao.edu
license: MIT
summary: NOAO Image Reduction and Analysis Facility

[source]
# Remember, always 32-bit! Now feast upon my tears.
#fn: ${package:name}.lnux.x86.fixup.tar.gz
#url: ${cbc_cgi:url}/${fn}
git_url: ssh://git@bitbucket.org/jhunkeler/${package:name}-src

# Tarball should be generated with:
# git archive --format tar.gz --prefix iraf/ -o ../iraf.lnux.x86.fixup.tar.gz -v master

[build]
number: 1
#detect_binary_files_with_prefix: True

[requirements]
build:
    # Luck
run:
    # Gallant effort

[cbc_build]
linux:
    export TERM=xterm
    export iraf=$$PREFIX/iraf/
    export IRAFARCH=macosx

    cp -a `pwd` $$PREFIX/iraf
    cd $$PREFIX/iraf

    export FAKEHOME=$$PREFIX/iraf/fakehome
    mkdir -p $$FAKEHOME
    
    ./install \
        --accept-defaults \
        --fakehome $$FAKEHOME \
        --term xterm \
        --mach $$IRAFARCH \
        --bindir $$FAKEHOME/bin \
        --cache $$FAKEHOME/cache \
        --imdir $$FAKEHOME/imdir \
        --no-errors

	sed -i -e "s|exit|return|g" unix/hlib/irafuser.*
	source unix/hlib/irafuser.sh
	# Fix me? why did i unset it?
    export FAKEHOME=$$PREFIX/iraf/fakehome
	
    mkdir -p bin.generic
	mkdir -p bin.$$IRAFARCH

    find . -lname '/iraf/iraf/*' \
        -exec sh -c 'ln -snf \
        "$$(readlink "$$0" \
        | sed -e "s|/iraf/iraf|../..|" -e "s|/as/|/as.$$IRAFARCH/|")" "$$0"' {} \;

    find "$$iraf" -type f \
        \( -name "*.c" \
        -o -name "*.f" \
        -o -name "*.h" \
        -o -name "*.x" \
        -o -name "*.sh*" \
        -o -name "*.csh*" \
        -o -name "*akefile*" \
        -o -name "*mkpkg*" \
        -o -name "*mklibs*" \
        -o -name "*mkbase*" \
        -o -name "*zzsetenv.def*" \
        -o -name "*install*" \) \
        -exec sed -i -e "s|/iraf/iraf|$$PREFIX/iraf|g" '{}' \;

    export CFLAGS="-arch i386 -m32 -I$$FAKEHOME/ -I $$iraf/include -I$$iraf/bin"
    export LDFLAGS="-arch i386"

	mkdir -p override
	ln -sf /usr/bin/libtool override/
	ln -sf /usr/bin/ranlib override/
	export PATH=$$iraf/override:$$PATH

    rm -rf include
    mkdir -p include
    
    #ln -s ../unix/hlib/libc/iraf.h $$FAKEHOME/
    ln -s ../unix/hlib/libc/iraf.h $$iraf/include/
    ln -s ../unix/bin/f2c.h $$iraf/include/
    cp $$iraf/unix/hlib/libc/vosproto.h $$iraf/include/
    cp $$iraf/unix/boot/xyacc/yaccpar.x $$iraf/include/
    mkdir -p $$iraf/include/curl && touch $$iraf/include/curl/types.h
    
    touch $$iraf/extern/.zzsetenv.def
    
    echo '$$set XFLAGS  = "$$(XFLAGS) -/I$$(iraf)fakehome -/I$$(iraf)include"'  >> unix/hlib/mkpkg.inc
    echo '$$set XVFLAGS = "$$(XVFLAGS) -/I$$(iraf)fakehome -/I$$(iraf)include"' >> unix/hlib/mkpkg.inc
    echo '$$set LFLAGS  = "$$(LFLAGS) -/I$$(iraf)fakehome -/I$$(iraf)include" -/L$$(iraf)bin -/$$(iraf)bin.$$(IRAFARCH)' >> unix/hlib/mkpkg.inc

    ( cd unix/f2c/src && \
        make -f makefile.u CFLAGS="$$CFLAGS" LDFLAGS="$$LDFLAGS" && \
        cp f2c $$iraf/unix/bin.$$IRAFARCH/f2c.e )
    
    ( cd unix/f2c/libf2c && \
        make -f makefile.u CFLAGS="$$CFLAGS" LDFLAGS="$$LDFLAGS" && \
        cp f2c.h libf2c.a $$iraf/unix/bin.$$IRAFARCH/ )
    
	( make $$IRAFARCH && \
        util/mksysgen )

windows:
    echo Not supported on Windows

